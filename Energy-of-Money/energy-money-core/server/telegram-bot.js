const { Telegraf, Markup } = require('telegraf');

class TelegramBot {
    constructor(botToken, gameUrl, dbManager) {
        this.bot = new Telegraf(botToken);
        this.gameUrl = gameUrl;
        this.dbManager = dbManager;
        this.googleDriveUrl = 'https://drive.google.com/uc?export=view&id=';
        
        // ID —Ñ–∞–π–ª–æ–≤ –∏–∑ Google Drive
        this.driveFileIds = {
            '1.png': '1DVFh1fEm5CG0crg_OYWKBrLIjnmgwjm8', // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            '3.png': '1oZKXefyAPKIgxQ0tYrewUhhb5cewtUWS', // –û –ø—Ä–æ–µ–∫—Ç–µ
            '6.png': '1TKi83s951WoB4FRONr8DnAITmZ8jCyfA', // –ò–≥—Ä–∞—Ç—å
            '10.png': '1Yvt736pFZgnkDT-wcyIzJfsqD573sK3B', // –î–æ—Ö–æ–¥ (–ø–µ—Ä–≤–æ–µ)
            '15.png': '1P_RJ8gYipADlTL8zHVXmyEdgzTbwJn_8', // –î–æ—Ö–æ–¥ (–≤—Ç–æ—Ä–æ–µ) –∏ –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤
            '16.png': '1gLf1Nwna9WFtu99thlo7ic8k51CBBnsR'  // –î–æ—Ö–æ–¥ (—Ç—Ä–µ—Ç—å–µ)
        };
        
        this.setupHandlers();
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    getImageUrls() {
        return {
            welcome: `${this.googleDriveUrl}${this.driveFileIds['1.png']}`,
            about: `${this.googleDriveUrl}${this.driveFileIds['3.png']}`,
            income: `${this.googleDriveUrl}${this.driveFileIds['10.png']}`,
            clients: `${this.googleDriveUrl}${this.driveFileIds['15.png']}`,
            play: `${this.googleDriveUrl}${this.driveFileIds['6.png']}`,
            balance: `${this.googleDriveUrl}${this.driveFileIds['15.png']}`,
            ref: `${this.googleDriveUrl}${this.driveFileIds['15.png']}`,
            franchise: `${this.googleDriveUrl}${this.driveFileIds['16.png']}`
        };
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async getUser(userId) {
        try {
            let user = await this.dbManager.getUser(userId);
            if (!user) {
                user = {
                    telegram_id: userId,
                    balance: 10, // 10$ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
                    referrals: 0,
                    ref_code: `ref_${userId}`,
                    created_at: new Date().toISOString()
                };
                await this.dbManager.createUser(user);
            }
            return user;
        } catch (error) {
            console.error('Error getting user:', error);
            // Fallback –∫ in-memory storage
            return {
                telegram_id: userId,
                balance: 10,
                referrals: 0,
                ref_code: `ref_${userId}`
            };
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    async processReferral(userId, referrerId) {
        try {
            const user = await this.getUser(userId);
            const referrer = await this.getUser(referrerId);
            
            // –ù–∞—á–∏—Å–ª—è–µ–º 10$ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
            user.balance += 10;
            
            // –ù–∞—á–∏—Å–ª—è–µ–º 10$ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
            referrer.balance += 10;
            referrer.referrals += 1;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            await this.dbManager.updateUser(user);
            await this.dbManager.updateUser(referrer);
            
            return { user, referrer };
        } catch (error) {
            console.error('Error processing referral:', error);
            return { user: null, referrer: null };
        }
    }

    setupHandlers() {
        // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        const mainMenu = Markup.keyboard([
            ['üìñ –û –ø—Ä–æ–µ–∫—Ç–µ', 'üí∞ –î–æ—Ö–æ–¥'],
            ['üë• –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤'],
            ['üéÆ –ò–≥—Ä–∞—Ç—å', 'üí≥ –ë–∞–ª–∞–Ω—Å']
        ]).resize();

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        this.bot.start(async (ctx) => {
            const userId = ctx.from.id;
            const startParam = ctx.message.text.split(' ')[1]; // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ—Å–ª–µ /start
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞, –µ—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä
            if (startParam && startParam.startsWith('ref_')) {
                const referrerId = parseInt(startParam.replace('ref_', ''));
                if (referrerId && referrerId !== userId) {
                    const { user, referrer } = await this.processReferral(userId, referrerId);
                    
                    // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
                    if (referrer) {
                        try {
                            await ctx.telegram.sendMessage(referrerId, 
                                `üéâ –£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ 10$. –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${referrer.balance}$`
                            );
                        } catch (e) {
                            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                        }
                    }
                }
            }
            
            const user = await this.getUser(userId);
            
            const welcomeText = `üëã –ü—Ä–∏–≤–µ—Ç –¥—Ä—É–≥! üëë (–ø–æ–¥—Ä—É–≥–∞)

üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≠–Ω–µ—Ä–≥–∏—é –î–µ–Ω–µ–≥ 

‚ú® ‚Äî –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –∏–≥—Ä–∞ —Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –≤ –∫–≤–∞–Ω—Ç–æ–≤–æ–º –ø–æ–ª–µ.

üöÄ –ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å:
‚Ä¢ ü´Ç –Ω–∞–π—Ç–∏ –¥—Ä—É–∑–µ–π
‚Ä¢ üí∞ —É–≤–µ–ª–∏—á–∏—Ç—å –¥–æ—Ö–æ–¥ 
‚Ä¢ ü§ù –Ω–∞–π—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ 
‚Ä¢ üé≤ –∏–≥—Ä–∞—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è 

üéØ –í—ã–±–∏—Ä–∞–π, —á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å üëá`;

            // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            const images = this.getImageUrls();
            
            // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
            try {
                await ctx.replyWithPhoto(images.welcome, { 
                    caption: welcomeText, 
                    reply_markup: mainMenu.reply_markup 
                });
            } catch (error) {
                // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                await ctx.reply(welcomeText, mainMenu);
            }
        });

        // –û –ø—Ä–æ–µ–∫—Ç–µ
        this.bot.hears('üìñ –û –ø—Ä–æ–µ–∫—Ç–µ', async (ctx) => {
            const aboutText = `üéÆ ¬´–≠–Ω–µ—Ä–≥–∏—è –î–µ–Ω–µ–≥¬ª ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –∏–≥—Ä–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ CashFlow.  

üí° –û–Ω–∞ –ø–æ–º–æ–≥–∞–µ—Ç –º–µ–Ω—è—Ç—å –º—ã—à–ª–µ–Ω–∏–µ, –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏ –∏ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.`;

            // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            const images = this.getImageUrls();
            
            // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –µ—Å—Ç—å
            try {
                await ctx.replyWithPhoto(images.about, { caption: aboutText });
            } catch (error) {
                // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                await ctx.reply(aboutText);
            }
        });

        // –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤
        this.bot.hears('üë• –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤', async (ctx) => {
            const clientsText = `üéØ –ß–µ—Ä–µ–∑ –∏–≥—Ä—É —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤.  

üöÄ –≠—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è —Ç–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å–≤—è–∑–µ–π.`;

            const clientsKeyboard = Markup.inlineKeyboard([
                [Markup.button.url('üë®‚Äçüíº –°—Ç–∞—Ç—å –º–∞—Å—Ç–µ—Ä–æ–º', 'https://t.me/Aurelia_8888?text=–•–æ—á—É —Å—Ç–∞—Ç—å –º–∞—Å—Ç–µ—Ä–æ–º, —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–º, –∫–∞–∫ –ø–æ–ª—É—á–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –∏–≥—Ä—É')]
            ]);

            // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            const images = this.getImageUrls();
            
            // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –µ—Å—Ç—å
            try {
                await ctx.replyWithPhoto(images.clients, {
                    caption: clientsText,
                    reply_markup: clientsKeyboard.reply_markup
                });
            } catch (error) {
                // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                await ctx.reply(clientsText, clientsKeyboard);
            }
        });

        // –î–æ—Ö–æ–¥
        this.bot.hears('üí∞ –î–æ—Ö–æ–¥', async (ctx) => {
            const earnText = `üí∞ –•–æ—á–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å ¬´–≠–Ω–µ—Ä–≥–∏–µ–π –î–µ–Ω–µ–≥¬ª?  

ü§ù –°—Ç–∞–Ω—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ø–æ–ª—É—á–∞–π –¥–æ—Ö–æ–¥, –∏–≥—Ä–∞—è –∏ –ø–æ–º–æ–≥–∞—è –¥—Ä—É–≥–∏–º –ª—é–¥—è–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è.`;

            const earnKeyboard = Markup.inlineKeyboard([
                [Markup.button.url('üì± –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', 'https://t.me/Aurelia_8888?text=–•–æ—á—É —Å—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º, —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ñ—Ä–∞–Ω—à–∏–∑–µ')]
            ]);

            // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            const images = this.getImageUrls();
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–¥—Ä—è–¥
            try {
                // –ü–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
                await ctx.replyWithPhoto(images.income, {
                    caption: earnText,
                    reply_markup: earnKeyboard.reply_markup
                });
                
                // –í—Ç–æ—Ä–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å —Ä–µ—Ñ –ø—Ä–æ–≥—Ä–∞–º–º–æ–π
                setTimeout(async () => {
                    const refText = `üîó –í–∞—à–∞ —Ä–µ—Ñ —Å—Å—ã–ª–∫–∞

üíµ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10$ –∫–æ—Ç–æ—Ä—ã–µ —Å–º–æ–∂–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤–Ω—É—Ç—Ä–∏ –±–æ—Ç–∞`;
                    
                    const refKeyboard = Markup.inlineKeyboard([
                        [Markup.button.url('üîó –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ —Å—Å—ã–ª–∫—É', 'https://t.me/anreal_money_bot?start=ref_' + ctx.from.id)]
                    ]);
                    
                    await ctx.replyWithPhoto(images.ref, {
                        caption: refText,
                        reply_markup: refKeyboard.reply_markup
                    });
                }, 5000);
                
                // –¢—Ä–µ—Ç—å—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å —Ñ—Ä–∞–Ω—à–∏–∑–æ–π
                setTimeout(async () => {
                    const franchiseText = `üè¢ –ö—É–ø–∏—Ç—å —Ñ—Ä–∞–Ω—à–∏–∑—É`;
                    
                    const franchiseKeyboard = Markup.inlineKeyboard([
                        [Markup.button.url('üíº –ö—É–ø–∏—Ç—å —Ñ—Ä–∞–Ω—à–∏–∑—É', 'https://t.me/Aurelia_8888?text=–•–æ—á—É –∫—É–ø–∏—Ç—å —Ñ—Ä–∞–Ω—à–∏–∑—É, —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —É—Å–ª–æ–≤–∏—è—Ö –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏')]
                    ]);
                    
                    await ctx.replyWithPhoto(images.franchise, {
                        caption: franchiseText,
                        reply_markup: franchiseKeyboard.reply_markup
                    });
                }, 10000);
                
            } catch (error) {
                // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                await ctx.reply(earnText, earnKeyboard);
            }
        });

        // –ò–≥—Ä–∞—Ç—å
        this.bot.hears('üéÆ –ò–≥—Ä–∞—Ç—å', async (ctx) => {
            const gameText = `üéÆ –ì–æ—Ç–æ–≤ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? üé≤  

üöÄ –ó–∞–ø—É—Å–∫–∞–π –∏–≥—Ä—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞–π —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ –º–∏—Ä–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π!`;

            const gameKeyboard = Markup.inlineKeyboard([
                [Markup.button.callback('üöÄ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É', 'start_game')]
            ]);

            // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            const images = this.getImageUrls();
            
            // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –µ—Å—Ç—å
            try {
                await ctx.replyWithPhoto(images.play, {
                    caption: gameText,
                    reply_markup: gameKeyboard.reply_markup
                });
            } catch (error) {
                // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                await ctx.reply(gameText, gameKeyboard);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"
        this.bot.action('start_game', async (ctx) => {
            await ctx.answerCbQuery();
            
            const gameKeyboard = Markup.inlineKeyboard([
                [Markup.button.url('üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É', this.gameUrl)]
            ]);

            await ctx.reply('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –∏–≥—Ä–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\nüåê –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å:', gameKeyboard);
        });

        // –ë–∞–ª–∞–Ω—Å
        this.bot.hears('üí≥ –ë–∞–ª–∞–Ω—Å', async (ctx) => {
            const userId = ctx.from.id;
            const user = await this.getUser(userId);
            
            const balanceText = `üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${user.balance}$

üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö: ${user.referrals}

üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
https://t.me/energy_m_bot?start=${user.ref_code}

üí∞ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π - –≤—ã –∏ –¥—Ä—É–≥ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ 10$ –Ω–∞ –±–∞–ª–∞–Ω—Å!`;

            const balanceKeyboard = Markup.inlineKeyboard([
                [Markup.button.url('üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π', `https://t.me/share/url?url=https://t.me/energy_m_bot?start=${user.ref_code}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∏–≥—Ä–µ –≠–Ω–µ—Ä–≥–∏—è –î–µ–Ω–µ–≥!`)]
            ]);

            await ctx.reply(balanceText, balanceKeyboard);
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        this.bot.on('text', async (ctx) => {
            await ctx.reply('ü§î –ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏! üëá', mainMenu);
        });
    }

    // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    async start() {
        try {
            await this.bot.launch();
            console.log('ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
            console.log('üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞: https://t.me/energy_m_bot');
            return true;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
            return false;
        }
    }

    // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
    async stop() {
        try {
            await this.bot.stop();
            console.log('ü§ñ Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞:', error);
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ API –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    getImageApiResponse() {
        return this.getImageUrls();
    }
}

module.exports = TelegramBot;
