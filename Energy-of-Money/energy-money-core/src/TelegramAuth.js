import React, { useEffect, useState } from 'react';
import './App.css';

function TelegramAuth({ onAuthSuccess }) {
  console.log('üîê TelegramAuth component loaded');
  const [telegramUser, setTelegramUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram WebApp
    if (window.Telegram && window.Telegram.WebApp) {
      const tg = window.Telegram.WebApp;
      
      if (tg.initDataUnsafe && tg.initDataUnsafe.user) {
        const user = tg.initDataUnsafe.user;
        setTelegramUser({
          id: user.id,
          first_name: user.first_name,
          last_name: user.last_name,
          username: user.username,
          language_code: user.language_code,
          is_premium: user.is_premium
        });
        
        // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        handleTelegramAuth(user);
      } else {
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram');
        setLoading(false);
      }
    } else {
      // –ï—Å–ª–∏ –Ω–µ –≤ Telegram WebApp, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—É—é —Ñ–æ—Ä–º—É
      setLoading(false);
    }
  }, []);

  const handleTelegramAuth = async (userData) => {
    try {
      setLoading(true);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const response = await fetch('/api/telegram/auth', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          telegram_id: userData.id,
          first_name: userData.first_name,
          last_name: userData.last_name,
          username: userData.username,
          language_code: userData.language_code,
          is_premium: userData.is_premium
        })
      });

      const result = await response.json();
      
      if (result.success) {
        // –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        onAuthSuccess({
          id: `tg_${userData.id}`,
          username: userData.username || userData.first_name,
          email: `tg_${userData.id}@telegram.local`,
          telegramData: userData,
          isTelegramUser: true
        });
      } else {
        setError(result.error || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      }
    } catch (error) {
      console.error('Telegram auth error:', error);
      setError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
    } finally {
      setLoading(false);
    }
  };

  const handleManualAuth = () => {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–±—ã—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    onAuthSuccess(null);
  };

  const handleTestAccount = () => {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const testUserData = {
      id: 'test_user_123',
      username: 'testuser',
      email: 'test@example.com',
      telegramData: {
        id: 123456789,
        first_name: 'Test',
        last_name: 'User',
        username: 'testuser',
        language_code: 'ru',
        is_premium: false
      },
      isTelegramUser: true
    };
    
    console.log('üß™ Using test account:', testUserData);
    onAuthSuccess(testUserData);
  };

  if (loading) {
    return (
      <div className="App">
        <header className="App-header">
          <h1>üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram</h1>
          <p>‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...</p>
        </header>
      </div>
    );
  }

  if (telegramUser) {
    return (
      <div className="App">
        <header className="App-header">
          <h1>‚úÖ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h1>
          <div style={{ 
            background: 'rgba(255,255,255,0.1)', 
            padding: '20px', 
            borderRadius: '10px',
            margin: '20px 0'
          }}>
            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {telegramUser.first_name}!</h2>
            <p>ID: {telegramUser.id}</p>
            {telegramUser.username && <p>Username: @{telegramUser.username}</p>}
            <p>–Ø–∑—ã–∫: {telegramUser.language_code}</p>
          </div>
        </header>
      </div>
    );
  }

  return (
    <div className="App">
      <header className="App-header">
        <h1>üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h1>
        <p>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É</p>
        
        {error && (
          <div style={{ 
            color: '#f44336', 
            margin: '20px 0',
            padding: '15px',
            background: 'rgba(244, 67, 54, 0.1)',
            borderRadius: '10px'
          }}>
            {error}
          </div>
        )}

        <div style={{ 
          background: 'rgba(255,255,255,0.1)', 
          padding: '30px', 
          borderRadius: '10px',
          margin: '20px 0',
          minWidth: '300px'
        }}>
          <div style={{ margin: '20px 0' }}>
            <button 
              className="start-button"
              onClick={() => window.open('https://t.me/anreal_money_bot', '_blank')}
              style={{ 
                width: '100%', 
                margin: '10px 0',
                background: 'linear-gradient(45deg, #0088cc, #00aaff)'
              }}
            >
              ü§ñ –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç
            </button>
          </div>
          
          <div style={{ margin: '20px 0' }}>
            <button 
              className="start-button"
              onClick={handleTestAccount}
              style={{ 
                width: '100%', 
                margin: '10px 0',
                background: 'linear-gradient(45deg, #ff6b35, #f7931e)'
              }}
            >
              üß™ –¢–µ—Å—Ç –∞–∫–∫–∞—É–Ω—Ç
            </button>
          </div>
          
          <div style={{ margin: '20px 0' }}>
            <button 
              className="start-button"
              onClick={handleManualAuth}
              style={{ 
                width: '100%', 
                margin: '10px 0',
                background: 'linear-gradient(45deg, #666, #888)'
              }}
            >
              üë§ –û–±—ã—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            </button>
          </div>
        </div>

        <div style={{ margin: '20px 0', textAlign: 'center' }}>
          <p style={{ fontSize: '14px', opacity: 0.7 }}>
            üß™ <strong>–¢–µ—Å—Ç –∞–∫–∫–∞—É–Ω—Ç</strong> - –±—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ —Å –≥–æ—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          </p>
          <p style={{ fontSize: '12px', opacity: 0.5, marginTop: '5px' }}>
            –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç
          </p>
        </div>
      </header>
    </div>
  );
}

export default TelegramAuth;
